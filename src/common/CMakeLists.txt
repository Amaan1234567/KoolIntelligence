set(DEBUG 0)
set(INFO 1)
set(WARNING 2)
set(ERROR 3)
set(CRITICAL 4)
set(LOG_LEVEL ${INFO})  # INFO level by default

option(LOG_LEVEL_DEBUG "Show warning + error + info + debug messages" OFF)
option(LOG_LEVEL_INFO "Show warning + error + info messages" OFF)
option(LOG_LEVEL_WARNING "Show warrning + error messages" OFF)
option(LOG_LEVEL_ERROR "Show error messages" ON)

if(LOG_LEVEL_DEBUG)
    set(LOG_LEVEL ${DEBUG})
    message(STATUS "Log level: DEBUG")
elseif(LOG_LEVEL_INFO)
    set(LOG_LEVEL ${INFO})
    message(STATUS "Log level: INFO")
elseif(LOG_LEVEL_WARNING)
    set(LOG_LEVEL ${WARNING})
    message(STATUS "Log level: WARNING")
elseif(LOG_LEVEL_ERROR)
    set(LOG_LEVEL ${ERROR})
    message(STATUS "Log level: ERROR")
endif()

set(LOG_FILE "\"$ENV{HOME}/koolintelligence/logs/logs.log\"")
message(STATUS "Log file: ${LOG_FILE}")
target_include_directories(koolintelligence PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_sources(koolintelligence PRIVATE logging.cpp)
target_compile_definitions(koolintelligence PRIVATE LOG_LEVEL=${LOG_LEVEL})
target_compile_definitions(koolintelligence PRIVATE LOG_FILE=${LOG_FILE})
